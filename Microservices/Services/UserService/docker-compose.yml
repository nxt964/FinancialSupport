version: '3.8'

services:
  userservice:
    build:
      context: .
      dockerfile: src/UserService.API/Dockerfile
    container_name: userservice-api
    ports:
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=userservice;Username=postgres;Password=password
      - Redis__ConnectionString=redis-cache:6379
      - Redis__InstanceName=UserService:
    depends_on:
      - postgres
      - redis-cache
    networks:
      - userservice-network

  postgres:
    image: postgres:15-alpine
    container_name: userservice-postgres
    environment:
      POSTGRES_DB: userservice
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - userservice-network

  redis-cache:
    image: redis:7-alpine
    container_name: userservice-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ../../Infras/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - userservice-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  userservice-network:
    driver: bridge 