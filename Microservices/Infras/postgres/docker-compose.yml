services:
  # UserService Database
  user-service-db:
    image: postgres:latest
    container_name: user-service-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: UserServiceDb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - user-service-db-data:/var/lib/postgresql/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user_service_user -d UserServiceDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NewsService Database
  news-service-db:
    image: postgres:latest
    container_name: news-service-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: NewsServiceDb
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - news-service-db-data:/var/lib/postgresql/data
    networks:
      - microservices-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U news_service_user -d NewsServiceDb"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    depends_on:
      - user-service-db
      - news-service-db
    networks:
      - microservices-network

volumes:
  user-service-db-data:
  news-service-db-data:

networks:
  microservices-network:
    driver: bridge 